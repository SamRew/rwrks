\documentclass[10pt]{beamer} 
% \usepackage{graphicx}
\usepackage{graphics}
\usepackage[T1]{fontenc}

\setbeamercovered{transparent}


\renewcommand{\ni}{\noindent}

% \SweaveOpts{cache=TRUE, background="white"}


\title[ 1-Intro]{1 - Intro to R}
\subtitle{Packages and Basic Programming}
\author[E. Hare, A. Kaplan, C. Sievert]{Eric Hare, Andee Kaplan, Carson Sievert}
\date{}
\institute[ISU]{Iowa State University}

\begin{document}


<<knitr-config, include=FALSE>>=
opts_chunk$set(background = 'white')
opts_chunk$set(size = 'footnotesize')
options(width=55)
@


\begin{frame}
    \maketitle
\end{frame}


\begin{frame}
    \frametitle{R Packages}
    \begin{itemize}
        \item Commonly used R functions are installed with base R
        \item R packages containing more specialized R functions can be installed freely from CRAN servers using function \texttt{install.packages()}
        \item After packages are installed, their functions can be loaded into the current R session using the function \texttt{library()}
    \end{itemize}    
\end{frame}


\begin{frame}
    \frametitle{Install Package Demo}
    \begin{itemize}
        \item Demo how to install and load the \texttt{dplyr} package
    \end{itemize}
\end{frame}


\begin{frame}
    \frametitle{Finding Packages}
    \begin{itemize}
        \item How do I locate a package with the desired function?
        \item Google ("R project" + search term works well)
        \item R website task views to search relevent subjects  \url{http://cran.r-project.org/web/views/}
        \item ??searchterm will seach R help for pages related to the search term
        \item \texttt{sos} package adds helpful features for searching for packages related to a particular topic
  \end{itemize}
\end{frame}


                                             

\begin{frame}
    \frametitle{Handy Packages}
    \begin{itemize}
        \item \texttt{ggplot2} : Statistical graphics
        \item \texttt{dplyr} / \texttt{tidyr} : Manipulating data structures
        \item \texttt{lme4} : Mixed models
        \item \texttt{knitr} : integrate LaTeX, HTML, or Markdown with R for easy reproducible research
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
    \frametitle{Programming}
    \framesubtitle{Functions}
Creating your own functions isn't too bad!

<<dFunctions1>>=
# Basic format
foo <- function(arg1, arg2, ...){
    # Code goes here
    return(output)
}

mymean <- function(dat){
    ans <- sum(dat)/length(dat)
    return(ans)
}
@
\end{frame}

\begin{frame}[fragile]
    \frametitle{Programming}
    \framesubtitle{Conditional statements}
if/else statements are quite useful.

<<dFuncdonotrun, eval=FALSE, warning=FALSE, error=FALSE>>=
#Basic format
if(condition){
    # Some code that runs if condition is TRUE
}else{
    # Some code that runs if condition isn't TRUE
}
@
<<dFunctions2>>=
mymean <- function(dat){
    if(!is.numeric(dat)){
        warning("Numeric input is required")
        return(NA)
    }
    ans <- sum(dat)/length(dat)
    return(ans)
}

@
\end{frame}

\begin{frame}[fragile]
    \frametitle{Programming}
    \framesubtitle{Looping}
    \begin{itemize}
        \item Reducing the amount of typing we do can be nice
        \item If we have a lot of code that is essentially the same we can take advantage of looping.
        \item R offers several loops: for, while, repeat.

    \end{itemize}
<<dForExample>>=
for(i in 1:3){
    print(i)
}
@
\end{frame}

\begin{frame}[fragile]
    \frametitle{Programming}
    \framesubtitle{More for}
<<dNoloadasdfd, include=FALSE>>=
library(reshape)
@
<<dfor2Example>>=
id <- c("total_bill", "tip", "size")
for(colname in id){
    print(colname)
}

for(colname in id){
    print(paste(colname, mymean( tips[, colname] ) ) )
}
@
\end{frame}

\begin{frame}[fragile]
    \frametitle{Programming}
    \framesubtitle{While}

<<dWhileExample>>=
i <- 1
while(i <= 5){
    print(i)
    i <- i + 1
}
@
\end{frame}

% \footnotesize
% \begin{frame}[fragile]
%     \frametitle{Apply}
%     \begin{itemize}
%         \item for and while loops aren't really `the R way' to do things.
%         \item The `apply' family of functions are more `R' in spirit.
%     \end{itemize}
% <<dApply>>=
% out <- rep(0, ncol(mtcars))
% for(i in seq(ncol(mtcars))){
%     out[i] <- mean(mtcars[,i])
% }
% out
% apply(mtcars, 2, mean)
% @
% \end{frame}
% \normalsize


\begin{frame}[fragile]
    \frametitle{Your Turn}
    \begin{itemize}
        \item Create a function that takes numeric input and provides the mean and a 95\% confidence interval for the mean for the data (the t.test function could be useful)
        \item Add checks to your function to make sure the data is either numeric or logical.  If it is logical convert it to numeric.
        \item Loop over the columns of the diamonds data set and apply your function to all of the numeric columns.
    \end{itemize}
\end{frame}



\begin{frame}
    \frametitle{What you've learned!}
    \begin{itemize}
        \item Use R for scientific/statistical calculations
        \item Be able to create or read in data and have the ability to manipulate the data accordingly
        \item Have the ability to explore data set characteristics and calculate summary statistics for real data sets
        \item Use the help functionality to find the functions you need to do what you want to do
        \item Install, use, and search for helpful external packages
        \item How to use basic programming constructs to make working with data easier
  \end{itemize}
\end{frame}


\begin{frame}
    \frametitle{Questions?}
    \begin{itemize}
        \item Any Questions???
  \end{itemize}
\end{frame}



\begin{frame}
    \frametitle{Feedback Survey}
    \begin{itemize}
        \item Please let us know how we did with the feedback survey!
    \item  \url{http://heike.wufoo.com/forms/r-workshop-your-opinion-matters/}
  \end{itemize}
\end{frame}




\end{document}
